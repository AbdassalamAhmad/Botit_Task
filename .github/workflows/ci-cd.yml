name: try running docker-compose then test.

on:
  workflow_dispatch: # Allow to run this workflow manually from the Actions tab
    inputs:
      trigger:
        description: "apply OR destroy" # apply to build infra, destroy to destroy it all.
        required: true
        default: apply # will choose the word apply for you when triggering the pipeline manually.
        type: choice
        options:
        - apply
        - destroy

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS User Credentials.
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS User Credentials.
  EC2_PUBLIC_SSH_KEY: ${{ secrets.EC2_PUBLIC_SSH_KEY }} # Used to upload public key to aws.
  EC2_PRIVATE_SSH_KEY: ${{ secrets.EC2_PRIVATE_SSH_KEY }} # Used to ssh into EC2.
  #TRIGGER: 'apply' # Make it 'apply' to build AWS infra, and 'destroy' to destroy it all. "auto_workflow (on Push)"
  TRIGGER: '${{ inputs.trigger }}' # "manual workflow"



jobs:
  test-flask:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      if: env.TRIGGER == 'apply'
      uses: actions/checkout@v3

    - name: run docker-compose
      if: env.TRIGGER == 'apply'
      run: docker-compose up -d

    - name: make sure that docker-compose is running & Install dependencies
      if: env.TRIGGER == 'apply'
      run: |
        docker ps
        pip install -r requirements.txt

    - name: run python tests
      if: env.TRIGGER == 'apply'
      run: python ./tests/test_hello.py

  build-aws-infra:
    runs-on: ubuntu-latest
    #needs: test-flask

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ./terraform
    
    # Checks that all Terraform configuration files in the correct format.
    - name: Terraform Format
      run: |-
        terraform fmt -recursive
        terraform fmt -check
      working-directory: ./terraform

    - name: Terraform ${{ env.TRIGGER }}
      id: apply-or-destroy # id can only have static name not changing name (can't be variable like env.trigger).
      run: |-
        terraform $TRIGGER \
        -var="public_key=$EC2_PUBLIC_SSH_KEY" \
        -auto-approve
      working-directory: ./terraform

    - name: Deploy Flask-App
      run: |-
        # copy private ssh key from secrets into github runner.
        mkdir ../keys
        cd ../keys
        echo "$EC2_PRIVATE_SSH_KEY" > ssh_key_aws
        sudo chmod 400 ssh_key_aws

        # copy files from repo to EC2 instance
        cd ../terraform
        instance_ip=$(terraform output --raw instance_public_ip)
        cd ../
        scp -o StrictHostKeyChecking=no -i ./keys/ssh_key_aws -r src/ tests/ ./requirements.txt ./docker-compose.yml ./Dockerfile ec2-user@$instance_ip:~

        # ssh into EC2 and deploy Flask-App.
        ssh -i ./keys/ssh_key_aws ec2-user@$instance_ip << EOF
          ls -l
          docker-compose up -d
        EOF
      working-directory: ./terraform

# sudo ssh -o StrictHostKeyChecking=no -i ../keys/ssh_key_aws ec2-user@$instance_ip << EOF
#   ls -l
#   sudo chmod 700 ./deploy_app.sh
#   ./deploy_app.sh
# EOF